[project]
name = "jubilant-backports"
description = "Extends Jubilant to include support for Juju 2.9"
readme = "README.md"
requires-python = ">=3.8"
dynamic = ["version"]
authors = [
    {name="The Charm Tech team at Canonical Ltd."},
]
classifiers = [
    "Programming Language :: Python :: 3",
    "License :: OSI Approved :: Apache Software License",
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: POSIX :: Linux",
]
dependencies = [
    # TODO: bump to 1.3 to get overlays in deploy
    "jubilant~=1.2",
]

[project.urls]
Homepage = "https://github.com/tonyandrewmeyer/jubilant-backports"
Repository = "https://github.com/tonyandrewmeyer/jubilant-backports"
Issues = "https://github.com/tonyandrewmeyer/jubilant-backports/issues"
#Documentation = "https://canonical-jubilant-backports.readthedocs-hosted.com/"

[dependency-groups]
dev = [
    "ops==2.20.0",  # for static type checking test charms
    "pyright==1.1.402",
    "pytest==8.3.5",
    "pytest-cov==5.0.0",
    "requests>=2.32.3",
    "ruff==0.11.5",
]

[build-system]
requires = ["setuptools>=60"]
build-backend = "setuptools.build_meta"

[tool.setuptools.dynamic]
version = {attr = "jubilant_backports.__version__"}

# Workaround for setuptools bug:
# https://github.com/astral-sh/uv/issues/9513#issuecomment-2519527822
[tool.setuptools]
license-files = []

# Linting tools configuration
[tool.ruff]
line-length = 99
target-version = "py38"
extend-exclude = ["docs/*"]

# Ruff formatter configuration
[tool.ruff.format]
quote-style = "single"

[tool.ruff.lint]
select = [
    # Pyflakes
    "F",
    # Pycodestyle
    "E",
    "W",
    # isort
    "I001",
    # pep8-naming
    "N",
    # flake8-builtins
    "A",
    # pyupgrade
    "UP",
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-simplify
    "SIM",
    # Ruff specific
    "RUF",
    # Perflint
    "PERF",
    # pyflakes-docstrings
    "D",
]
ignore = [
    # Function argument `x` is shadowing a Python builtin
    "A002",

    # Use of `assert` detected
    "S101",

    # `subprocess` call: check for execution of untrusted input
    "S603",

    # Return the condition `x` directly
    "SIM103",
]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["id", "min", "map", "range", "type", "input", "format"]

[tool.ruff.lint.per-file-ignores]
"jubilant_backports/statustypes.py" = [
    # Missing docstring in public class
    "D101",
]
"tests/*" = [
    # All documentation linting.
    "D",
    # Use of possibly insecure function (eval)
    "S307",
    # Line too long
    "E501",
]

[tool.pyright]
include = ["jubilant_backports", "tests"]
pythonVersion = "3.8"
pythonPlatform = "All"
typeCheckingMode = "strict"
reportPrivateUsage = false  # silence errors about use of _from_dict outside class

[tool.pytest.ini_options]
pythonpath = [
  "."
]
markers = [
    "machine",
]
